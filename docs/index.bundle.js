(()=>{"use strict";var __webpack_modules__={378:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./src/images/star-wars-logo.png\nvar star_wars_logo = __webpack_require__(432);\n;// CONCATENATED MODULE: ./src/modules/NewGameModal.js\nvar NewGameModal = function () {\n  // Creates the DOM elements for a modal that tells the user who won and to allow them to start a new game\n  function openNewGameModal(endGameMessage, winner) {\n    var newGameModal = document.createElement(\'div\');\n    newGameModal.classList.add(\'modal\');\n    newGameModal.setAttribute(\'id\', \'modal\');\n    newGameModal.innerHTML = "<div class=\\"modal-content\\">\\n      <div class=\\"modal-body\\">\\n        <div class=\\"winning-player-icon\\"></div>\\n        <p>".concat(endGameMessage, "</p>\\n        <div class=\\"button-group\\">\\n          <button type=\\"button\\" class=\\"button restart-button\\">Play Again</button>\\n          <button type=\\"button\\" class=\\"button game-settings-button\\">Settings</button>\\n        </div>\\n      </div>\\n    </div>");\n    document.querySelector(\'main\').appendChild(newGameModal);\n    document.querySelector(\'body\').classList.add(\'modal-open\');\n    renderWinningPlayerIcon(winner);\n  } // Removes the DOM elements for the modal while it\'s currently displayed\n\n\n  function closeNewGameModal() {\n    var newGameModal = document.getElementById(\'modal\');\n    newGameModal ? document.querySelector(\'main\').removeChild(newGameModal) : null;\n    document.querySelector(\'body\').classList.remove(\'modal-open\');\n  } // Creates the DOM elements for the icon of the winning player to be displayed within the modal\n\n\n  function renderWinningPlayerIcon(winner) {\n    var winningPlayerIcon;\n\n    if (winner === \'draw\') {\n      winningPlayerIcon = "\\n      <span class=\\"fab fa-rebel rebellion-icon\\" aria-hidden=\\"true\\"></span>\\n      <span class=\\"fab fa-empire empire-icon\\" aria-hidden=\\"true\\"></span>";\n    } else {\n      winningPlayerIcon = "<span class=\\"fab fa-".concat(winner === \'Rebellion\' ? \'rebel\' : \'empire\', " ").concat(winner.toLowerCase(), "-icon\\" aria-hidden=\\"true\\"></span>");\n    }\n\n    document.querySelector(\'.winning-player-icon\').innerHTML = winningPlayerIcon;\n  }\n\n  return {\n    openNewGameModal: openNewGameModal,\n    closeNewGameModal: closeNewGameModal\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./src/modules/Game.js\n\n\n\nvar Game = function () {\n  // List of possibilities for a player to win the game\n  var winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // The current state of the game board\n\n  var board;\n  var playerOne;\n  var playerTwo;\n  var currentPlayer = null;\n  var aiMoveDelay; // Factory function to create data for a new player for the current game\n\n  var Player = function Player(playerType, playAs) {\n    return {\n      playerType: playerType,\n      playAs: playAs\n    };\n  }; // Creates the DOM elements for the game board\n\n\n  function renderGameBoard(firstPlayer) {\n    document.querySelector(\'.game-container\').innerHTML = "<div class=\\"board-container\\">\\n      <p class=\\"current-turn-message\\">The ".concat(firstPlayer.playAs, " goes first!</p>\\n      <div class=\\"game-board\\">\\n        ").concat(board.map(function (square, index) {\n      return "<div class=\\"square-container\\">\\n            <div class=\\"square fab\\" id=\\"".concat(index, "\\"></div>\\n          </div>");\n    }).join(\'\'), "\\n      </div>\\n      <button type=\\"button\\" class=\\"button restart-button\\">Restart</button>\\n    </div>");\n  } // Resets and renders the game board for a new game\n\n\n  function startNewGame(gameSettingsData) {\n    clearTimeout(aiMoveDelay);\n    board = new Array(9).fill().map(function (square, index) {\n      return index;\n    });\n\n    if (gameSettingsData.players === \'1-player\') {\n      playerOne = Player(\'human\', gameSettingsData.playAs);\n      playerTwo = Player(\'ai\', gameSettingsData.playAs === \'Rebellion\' ? \'Empire\' : \'Rebellion\');\n    } else {\n      playerOne = Player(\'human\', \'Rebellion\');\n      playerTwo = Player(\'human\', \'Empire\');\n    }\n\n    currentPlayer = playerOne;\n    renderGameBoard(currentPlayer);\n    NewGameModal.closeNewGameModal();\n  } // Plays the current player\'s selected square and then changes to the opposing player\'s turn if the game hasn\'t ended\n\n\n  function playTurn(square) {\n    if (typeof board[square] === \'number\') {\n      board[square] = currentPlayer.playAs.toLowerCase();\n      document.getElementById(square).classList.add("fa-".concat(currentPlayer.playAs === \'Rebellion\' ? \'rebel\' : \'empire\'), "".concat(currentPlayer.playAs.toLowerCase(), "-icon"), \'selected\');\n      document.getElementById(square).setAttribute(\'aria-label\', currentPlayer.playAs === \'Rebellion\' ? \'rebel\' : \'empire\');\n\n      if (checkForWinner(currentPlayer)) {\n        highlightWinningSquares(currentPlayer);\n        endGame(currentPlayer.playAs);\n      } else if (checkForDraw()) {\n        endGame(\'draw\');\n      } else {\n        currentPlayer === playerOne ? currentPlayer = playerTwo : currentPlayer = playerOne;\n        document.querySelector(\'.current-turn-message\').innerHTML = "It\'s the ".concat(currentPlayer.playAs, "\'s turn.");\n        if (currentPlayer.playerType === \'ai\') aiMoveDelay = setTimeout(changeToAiTurn, 1200);\n      }\n    }\n  } // Click handler that allows the current player to select a square if it is the user\'s turn\n\n\n  function selectSquare(event) {\n    if (currentPlayer.playerType === \'human\') {\n      playTurn(event.target.id);\n    }\n  } // Determines whether to play the Easy AI or the Hard AI\n\n\n  function changeToAiTurn() {\n    if (GameSettings.returnGameSettingsData().difficulty === \'hard\') {\n      playSmartAiTurn();\n    } else {\n      playRandomAiTurn();\n    }\n  } // AI picks an unplayed square at random (Easy mode)\n\n\n  function playRandomAiTurn() {\n    var availableSquares = checkAvailableSquares();\n    playTurn(availableSquares[Math.floor(Math.random() * availableSquares.length)]);\n  } // AI picks an unplayed square using the minimax algorithm (Hard mode)\n\n\n  function playSmartAiTurn() {\n    playTurn(handleMinimax(board, playerTwo.playAs).index);\n  } // Minimax algorithm which determines the best move the AI should play against the user during its turn\n\n\n  function handleMinimax(boardCopy, player) {\n    var availableSquares = checkAvailableSquares(boardCopy);\n    var bestTestMove = null;\n    var bestScore; // Human player (minimizing player)\n\n    if (checkForWinner(playerOne)) {\n      return {\n        score: -1\n      };\n    } // AI player (maximizing player)\n    else if (checkForWinner(playerTwo)) {\n      return {\n        score: 1\n      };\n    } else if (checkForDraw()) {\n      return {\n        score: 0\n      };\n    } else {\n      // Recursively tests potential move outcomes for the current player\n      var testMoves = availableSquares.reduce(function (acc, square) {\n        var testMove = {};\n        var result;\n        testMove.index = boardCopy[square];\n        boardCopy[square] = player.toLowerCase();\n\n        if (player === playerTwo.playAs) {\n          result = handleMinimax(boardCopy, playerOne.playAs);\n          testMove.score = result.score;\n        } else {\n          result = handleMinimax(boardCopy, playerTwo.playAs);\n          testMove.score = result.score;\n        }\n\n        boardCopy[square] = testMove.index;\n        acc.push(testMove);\n        return acc;\n      }, []); // Uses array of test scores to determine the best move for the AI to play\n\n      if (player === playerTwo.playAs) {\n        bestScore = -Infinity;\n\n        for (var i = 0; i < testMoves.length; i++) {\n          if (testMoves[i].score > bestScore) {\n            bestScore = testMoves[i].score;\n            bestTestMove = i;\n          }\n        }\n      } else {\n        bestScore = Infinity;\n\n        for (var _i = 0; _i < testMoves.length; _i++) {\n          if (testMoves[_i].score < bestScore) {\n            bestScore = testMoves[_i].score;\n            bestTestMove = _i;\n          }\n        }\n      }\n\n      return testMoves[bestTestMove];\n    }\n  } // Checks to see which squares on the board haven\'t been played yet in the current game\n\n\n  function checkAvailableSquares() {\n    return board.filter(function (square) {\n      return typeof square === \'number\';\n    });\n  } // Adds a highlighted background on the winning squares when a player wins\n\n\n  function highlightWinningSquares(player) {\n    var winningSquares = checkForWinner(player);\n    return winningSquares.map(function (square) {\n      document.getElementById(square).classList.add(\'winning-square\');\n    });\n  } // Checks the board to see if the current player has matched one of the possible winning combinations\n\n\n  function checkForWinner(player) {\n    return winningCombinations.find(function (combination) {\n      return combination.every(function (val) {\n        return board[val] === player.playAs.toLowerCase();\n      });\n    });\n  } // Checks the board to see if every square has been filled without a winner\n\n\n  function checkForDraw() {\n    return board.every(function (square) {\n      return typeof square !== \'number\';\n    });\n  } // Ends the current game if a player has won or if there is a draw\n\n\n  function endGame(winner) {\n    var endGameMessage;\n    winner === \'draw\' ? endGameMessage = \'It\\\'s a draw!\' : endGameMessage = "The ".concat(winner, " won!");\n    NewGameModal.openNewGameModal(endGameMessage, winner);\n    document.querySelectorAll(\'.square\').forEach(function (square) {\n      square.classList.add(\'game-ended\');\n    });\n  }\n\n  return {\n    startNewGame: startNewGame,\n    selectSquare: selectSquare\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./src/modules/GameSettings.js\n\n\n\nvar GameSettings = function () {\n  var gameSettingsData; // Factory function to create data for a new settings form submission\n\n  var SettingsFormData = function SettingsFormData(players, difficulty, playAs) {\n    return {\n      players: players,\n      difficulty: difficulty,\n      playAs: playAs\n    };\n  }; // Creates the DOM elements for the game settings form\n\n\n  function renderGameSettings() {\n    document.querySelector(\'.game-container\').innerHTML = "<div class=\\"game-settings-container\\">\\n      <h3>Start a New Game</h3>\\n      <form class=\\"game-settings-form\\" novalidate>\\n        <div class=\\"form-group players\\">\\n          <label for=\\"players-input\\">Players:</label>\\n          <div class=\\"select-wrapper\\">\\n            <select name=\\"players\\" id=\\"players-input\\" required>\\n              <option value=\\"1-player\\" selected>Organic vs. Droid (1-Player)</option>\\n              <option value=\\"2-player\\">Organic vs. Organic (2-Player)</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\"button-group\\">\\n          <button type=\\"submit\\" class=\\"button start-button\\">Start</button>\\n        </div>\\n      </form>\\n    </div>";\n    toggleOnePlayerSettings(\'1-player\');\n    NewGameModal.closeNewGameModal();\n  } // Shows/Hides the settings options that applies to a 1-player game only\n\n\n  function toggleOnePlayerSettings(players) {\n    var onePlayerSettings;\n\n    if (players === \'1-player\') {\n      onePlayerSettings = document.createElement(\'div\');\n      onePlayerSettings.classList.add(\'one-player-settings\');\n      onePlayerSettings.innerHTML = "\\n      <div class=\\"form-group one-player-setting difficulty\\">\\n        <label for=\\"difficulty-input\\">Difficulty:</label>\\n        <div class=\\"select-wrapper\\">\\n          <select name=\\"difficulty\\" id=\\"difficulty-input\\" required>\\n            <option value=\\"easy\\" selected>Easy</option>\\n            <option value=\\"hard\\">Hard</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\"form-group one-player-setting play-as\\">\\n        <label for=\\"play-as-input\\">Play as:</label>\\n        <div class=\\"select-wrapper\\">\\n          <select name=\\"play-as\\" id=\\"play-as-input\\" required>\\n            <option value=\\"Rebellion\\" selected>Rebel Alliance</option>\\n            <option value=\\"Empire\\">Galactic Empire</option>\\n          </select>\\n        </div>\\n      </div>";\n      document.querySelector(\'.game-settings-form\').insertBefore(onePlayerSettings, document.querySelector(\'.button-group\'));\n    } else {\n      onePlayerSettings = document.querySelector(\'.game-settings-form .one-player-settings\');\n      onePlayerSettings ? document.querySelector(\'.game-settings-form\').removeChild(onePlayerSettings) : null;\n    }\n  } // Submit handler for the game settings form\n\n\n  function handleSubmit(event, players) {\n    var difficulty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var playAs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    event.preventDefault();\n    gameSettingsData = SettingsFormData(players, difficulty, playAs);\n    Game.startNewGame(gameSettingsData);\n  } // Returns the values of the current game settings\n\n\n  function returnGameSettingsData() {\n    return gameSettingsData;\n  }\n\n  return {\n    renderGameSettings: renderGameSettings,\n    toggleOnePlayerSettings: toggleOnePlayerSettings,\n    handleSubmit: handleSubmit,\n    returnGameSettingsData: returnGameSettingsData\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./src/modules/App.js\n\n\n\n\nvar App = function () {\n  // Creates the DOM elements for the webpage content\n  function renderApp() {\n    document.getElementById(\'app\').innerHTML = "\\n    <header>\\n      <h1>\\n        <img src=\\"".concat(star_wars_logo, "\\" class=\\"star-wars-logo\\" alt=\\"Star Wars\\" />\\n      </h1>\\n      <h2>Tic-Tac-Toe</h2>\\n    </header>\\n    <main>\\n      <div class=\\"game-container\\"></div>\\n    </main>\\n    <footer>Created by <a href=\\"https://autumnchris.github.io/portfolio\\" target=\\"_blank\\">Autumn Bullard</a> &copy; ").concat(new Date().getFullYear(), "</footer>");\n    GameSettings.renderGameSettings(); // Click Event Listeners\n\n    document.addEventListener(\'click\', function (event) {\n      var element = event.target;\n      element.matches(\'.square\') ? Game.selectSquare(event) : null;\n      element.matches(\'.restart-button\') ? Game.startNewGame(GameSettings.returnGameSettingsData()) : null;\n      element.matches(\'.game-settings-button\') ? GameSettings.renderGameSettings() : null;\n    }); // Change Event Listeners\n\n    document.addEventListener(\'change\', function (event) {\n      var element = event.target;\n      element.matches(\'.game-settings-form #players-input\') ? GameSettings.toggleOnePlayerSettings(element[element.selectedIndex].value) : null;\n    }); // Submit Event Listeners\n\n    document.addEventListener(\'submit\', function (event) {\n      var element = event.target;\n\n      if (element.matches(\'.game-settings-form\')) {\n        element[1].name === \'difficulty\' ? GameSettings.handleSubmit(event, document.getElementById(\'players-input\').value, document.getElementById(\'difficulty-input\').value, document.getElementById(\'play-as-input\').value) : GameSettings.handleSubmit(event, document.getElementById(\'players-input\').value);\n      }\n    });\n  }\n\n  return {\n    renderApp: renderApp\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/index.html\n/* harmony default export */ const cjsname_name_ext_src = (__webpack_require__.p + "index.html");\n;// CONCATENATED MODULE: ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/favicon.ico\n/* harmony default export */ const favicon = (__webpack_require__.p + "favicon.ico");\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\nApp.renderApp();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///378\n')},432:(e,n,l)=>{e.exports=l.p+"assets/008e3ccd596f5948b8b6.png"}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var l=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](l,l.exports,__webpack_require__),l.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var l=n.getElementsByTagName("script");l.length&&(e=l[l.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})();var __webpack_exports__=__webpack_require__(378)})();